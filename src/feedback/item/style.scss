@import '../../helpers/all';

@mixin feedbackItemColor($color) {

    &.FeedbackItem--#{$color} {
        color: color($color, 500);

        &:before {
            background: color($color, 100);
        }

        .FeedbackItem-text {
            color: color($color, 900);
        }

        .FeedbackItem-lastEditLabel {
            color: color($color, 300);
        }

        .FeedbackItem-starIcon .Icon {
            fill: color($color, 500);
        }
    }
}

.FeedbackItem {
    padding: space(500);
    padding-right: space(300);
    position: relative;

    @each $color in $G-allColors {
        @include feedbackItemColor($color);
    }

    &.isVisible .FeedbackItem-wrapper {
        margin: 0;
        opacity: 1;
    }

    &:nth-of-type(1n+2):before {
        content: '';
        display: block;
        height: 1px;
        left: space(500);
        position: absolute;
        right: space(500);
        top: 0;
    }

    &-wrapper {
        display: flex;
        margin-left: space(500);
        opacity: 0;
        transition: {
            duration: speed(500);
            // We need to use "margin" here and not a "transform" due to transforms
            // creating a new z-index stacking order which stops the child MiniMenu
            // from being able to overlap other elements on the page when its options
            // are open as its z-index context no longer relates to the root <html/>.
            property: margin, opacity;
        }
        width: 100%;
    }

    &-content {
        flex-grow: 1;
        padding: 0 space(500) 0 space(300);
        width: 0;
    }

    &-name {
        display: block;
        font-weight: fontWeight(700);
    }

    &-text {
        font-size: fontSize(300);
    }

    &-lastEdit {
        display: block;
        font: {
            size: fontSize(200);
            weight: fontWeight(700);
        }
        padding-top: space(300);
        text-transform: uppercase;
    }

    &-lastEditLabel {
        padding-right: space(300);
    }
}
